col=c(2,3,4,5), pch = 20, cex = 0.7)
op <- par(mfrow=c(2,2))
sm.density(df2.clust1[, 1], add = F)
sm.density(df2.clust2[, 1], add = F)
sm.density(df2.clust3[, 1], add = F)
sm.density(df2.clust4[, 1], add = F)
sm.density.compare(x = df2$lambda, group = df2$cluster, col = c(2,3,4,5),
lty=1)
legend(x = "bottomright", legend = c("1","2","3","4"), title = "Cluster",
col=c(2,3,4,5), pch = 20, cex = 0.7)
plot(zip.PC$scores[,1:2],pch=19,cex=.5,col=zip.zeros[,ncol(zip.zeros)]+1)
lines(proj.prcv.to.PC[princ.curve$ord,1:2],col=1, lty = 2, lwd=2)
legend(x = "bottomright", legend = c("1","2","3","4"), title = "Cluster",
col=c(2,3,4,5), pch = 20, cex = 0.7)
op <- par(mfrow=c(2,2))
sm.density(df2.clust1[, 1], add = F)
sm.density(df2.clust2[, 1], add = F)
sm.density(df2.clust3[, 1], add = F)
sm.density(df2.clust4[, 1], add = F)
sm.density.compare(x = df2$lambda, group = df2$cluster, col = c(2,3,4,5),
lty=c(1,1,1,1))
legend(x = "bottomright", legend = c("1","2","3","4"), title = "Cluster",
col=c(2,3,4,5), pch = 20, cex = 0.7)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
prior.NBA <- c(1000, 5)
prior.ABC <- c(850, 5)
data <- read.table("./basquet.txt")
data
data <- read.table("./basquet.txt")
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA)
data <- read.table("./basquet.txt")
ggplot() +
stat_function(fun = dgamma,
args = list(shape1 = prior.NBA[1], shape2 = prior.NBA[2]))
?stat_function
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA)
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA) +
xlim(c(130, 270))
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA) +
stat_function(fun = dgamma,
args = prior.ABC)
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA) +
stat_function(fun = dgamma,
args = prior.ABC)+
xlim(c(130, 270))
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA, col = "blue") +
stat_function(fun = dgamma,
args = prior.ABC) +
xlim(c(130, 270))
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA, col = "blue") +
stat_function(fun = dgamma,
args = prior.ABC, col = "red") +
xlim(c(130, 270))
lik.NBA <- map_dbl(lambda, ~ prod(dpois(y, .x)))
library(purrr)
prior.NBA <- c(500, 2.5)
prior.ABC <- c(425, 2.5)
data <- read.table("./basquet.txt")
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(y, .x)))
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data[,2], .x)))
data
data <- as.data.frame(read.table("./basquet.txt"))
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data[,2], .x)))
data
data.NBA <- data[2:,2]
data.NBA <- data[2:-1,2]
data.NBA <- data[,2]
data.NBA
data.NBA <- data[,2]
data.NBA
data.NBA <- data[-1,2]
data.NBA
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
data.NBA
as.numeric(data.NBA)
data.NBA <- as.numeric(data[-1,2])
data.ABC <- as.numeric(data[-1,1])
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
df <- tibble(lambda, lik.NBA, lik.ABC)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01)
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01)
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
df
ggplot() +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "red") +
geom_line(aes(lambda, post.NBA), col = "red") +
ggplot() +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "red") +
geom_line(aes(lambda, post.NBA), col = "red")
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "red") +
geom_line(aes(lambda, post.NBA), col = "red")
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA)),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "red") +
geom_line(aes(lambda, post.NBA), col = "red")
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
df
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA)),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC))
)
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "red") +
geom_line(aes(lambda, post.NBA), col = "red")
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "blue") +
geom_line(aes(lambda, post.NBA), col = "green")
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC))
)
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "blue") +
geom_line(aes(lambda, post.NBA), col = "green")
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "blue")
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
data <- read.table("./basquet.txt")
data.NBA <- as.numeric(data[-1,2])
data.ABC <- as.numeric(data[-1,1])
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
df <- tibble(lambda, lik.NBA, lik.ABC)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC))
)
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "blue") +
geom_line(aes(lambda, post.NBA), col = "green")
df %>%
gather(key = Distribution, value = value, -lambda) %>%
ggplot() +
geom_line(aes(x = lambda, y = value, col = Distribution))
sum(lik.ABC)
sum(lik.NBA)
sum(data.NBA)
sum(data.ABC)
sum(lik.NBA)
sum(lik.ABC)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
sum(lik.NBA)
sum(lik.ABC)
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
lik.ABC <- lik.ABC / (sum(lik.ABC) * 0.01)
sum(lik.NBA)
sum(lik.ABC)
data <- read.table("./basquet.txt")
data.NBA <- as.numeric(data[-1,2])
data.ABC <- as.numeric(data[-1,1])
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
lik.ABC <- lik.ABC / (sum(lik.ABC) * 0.01)
df <- tibble(lambda, lik.NBA, lik.ABC)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
df %>%
gather(key = Distribution, value = value, -lambda) %>%
ggplot() +
geom_line(aes(x = lambda, y = value, col = Distribution))
?dnbinom
n <- length(data.ABC[-1,1])
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(purrr)
prior.NBA <- c(500, 2.5)
prior.ABC <- c(425, 2.5)
data <- read.table("./basquet.txt")
data.NBA <- as.numeric(data[-1,2])
data.ABC <- as.numeric(data[-1,1])
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
lik.ABC <- lik.ABC / (sum(lik.ABC) * 0.01)
df <- tibble(lambda, lik.NBA, lik.ABC)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
df %>%
gather(key = Distribution, value = value, -lambda) %>%
ggplot() +
geom_line(aes(x = lambda, y = value, col = Distribution))
M <- 10000  # Number of simulations
n <- length(data.ABC[-1,1])
n <- length(data.ABC)
mean(y.sim)
post.NBA <- c(prior.NBA[1] + sum(data.NBA), prior.NBA[2] + length(data.NBA))
post.ABC <- c(prior.ABC[1] + sum(data.ABC), prior.ABC[2] + length(data.ABC))
y.sim <- rpois(M, post.NBA) - rpois(M, post.ABC)
mean(y.sim)
y.sim
post.NBA
lam.post.NBA <- rgamma(M, shape = post.NBA[1], rate = post.NBA[2])
lam.post.ABC <- rgamma(M, shape = post.ABC[1], rate = post.ABC[2])
y.sim <- rpois(M, lam.post.NBA) - rpois(M, lam.post.ABC)
post.NBA <- c(prior.NBA[1] + sum(data.NBA), prior.NBA[2] + length(data.NBA))
post.ABC <- c(prior.ABC[1] + sum(data.ABC), prior.ABC[2] + length(data.ABC))
lam.post.NBA <- rgamma(M, shape = post.NBA[1], rate = post.NBA[2])
lam.post.ABC <- rgamma(M, shape = post.ABC[1], rate = post.ABC[2])
y.sim <- rpois(M, lam.post.NBA) - rpois(M, lam.post.ABC)
mean(y.sim)
length(y.sim > 0)
length(y.sim > 0)
y.sim
y.sim[y.sim > 0]
length(y.sim[y.sim > 0])
# Probability that NBA match has more points than ABC match
length(y.sim[y.sim > 0]) / M
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(purrr)
prior.NBA <- c(500, 2.5)
prior.ABC <- c(425, 2.5)
data <- read.table("./basquet.txt")
data.NBA <- as.numeric(data[-1,2])
data.ABC <- as.numeric(data[-1,1])
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
lik.ABC <- lik.ABC / (sum(lik.ABC) * 0.01)
df <- tibble(lambda, lik.NBA, lik.ABC)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
df %>%
gather(key = Distribution, value = value, -lambda) %>%
ggplot() +
geom_line(aes(x = lambda, y = value, col = Distribution))
M <- 10000  # Number of simulations
set.seed(666)
post.NBA <- c(prior.NBA[1] + sum(data.NBA), prior.NBA[2] + length(data.NBA))
post.ABC <- c(prior.ABC[1] + sum(data.ABC), prior.ABC[2] + length(data.ABC))
lam.post.NBA <- rgamma(M, shape = post.NBA[1], rate = post.NBA[2])
lam.post.ABC <- rgamma(M, shape = post.ABC[1], rate = post.ABC[2])
y.sim <- rpois(M, lam.post.NBA) - rpois(M, lam.post.ABC)
# Probability that NBA match has more points than ABC match
length(y.sim[y.sim > 0]) / M
length(y.sim[y.sim >= 0]) / M
length(y.sim[y.sim >= 60]) / M
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rstan)
library(bayesplot)
options(mc.cores = parallel::detectCores())
Y_A <- c(115, 120, 111, 123, 116,
121, 118, 116, 127, 129)
Y_B <- c(123, 131, 113, 119, 123,
113, 128, 126, 125, 128)
data = list(n_A = length(Y_A), n_B = length(Y_B),
Y_A = Y_A, Y_B = Y_B)
fit <- stan("./stan_model/training_workers.stan", iter = 1000, chains = 4,
data = data)
fit
posterior <- as.matrix(fit)
mu_A_post <- posterior[,"mu_A"]
mu_B_post <- posterior[,"mu_B"]
acf(mu_A_post)
acf(mu_B_post)
traceplot(fit)
plot(density(mu_A_post))
plot(density(mu_B_post))
plot_title <- ggtitle("Posterior distributions of mu_A and mu_B", "with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("mu_A", "mu_B"),
prob = 0.8) + plot_title
mcmc_trace(posterior,
pars = c("mu_A", "mu_B"),
facet_args = list(nrow = 2))
diff <- mu_A_post - mu_B_post
plot(density(diff))
plot(density(posterior[,"diff"]))
quantile(diff)
?quantile
quantile(diff, c(0.025, 0.975))
quantile(posterior[,"diff"], c(0.025, 0.975))
quantile(posterior[,"diff"], c(0.025, 0.975))
plot(density(posterior[,"diff"]))
quantile(posterior[,"diff"], c(0.025, 0.975))
plot(density(posterior[,"diff"]))
mcmc_trace(posterior,
pars = c("mu_A", "mu_B"),
facet_args = list(nrow = 2))
mcmc_areas(posterior,
pars = c("mu_A", "mu_B"),
prob = 0.8) + plot_title
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.8) + plot_title
mcmc_areas(posterior,
pars = c("diff"),
prob = c(0.025, 0.975)) + plot_title
mcmc_areas(posterior,
pars = c("diff"),
prob = c(0.25, 0.975)) + plot_title
mcmc_areas(posterior,
mcmc_areas(posterior,
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.95) + plot_title
)
}
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.95) + plot_title
plot_title <- ggtitle("Posterior distributions of mu_A - mu_B", "with median and 95% credible interval")
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.95) + plot_title
quantile(posterior[,"diff"], c(0.025, 0.975))
plot_title <- ggtitle("Posterior distributions of mu_A - mu_B", "with median and 95% credible interval")
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.95) + plot_title
quantile(posterior[,"diff"], c(0.025, 0.975))
plot_title <- ggtitle("Posterior distributions of mu_A - mu_B", "with median and 95% credible interval")
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.95) + plot_title
install.packages("stringi")
gam <- rgamma(1000, 1, rate = 1)
plot(gam)
hist(gam)
gam <- rgamma(1000, 5, rate = 1)
hist(gam)
hist(gam)
?dgamma
1:10:0.1
knitr::opts_chunk$set(echo = TRUE)
plot(function(x)dgamma(x,shape=6,rate=1))
plot(function(x)dgamma(x,shape=6,rate=1),xlim=c(0,10))
plot(function(x)dgamma(x,shape=6,rate=5),xlim=c(0,20))
plot(function(x)dgamma(x,shape=6,rate=0.01),xlim=c(0,20))
plot(function(x)dgamma(x,shape=100,rate=20),xlim=c(0,20))
plot(function(x)dgamma(x,shape=1,rate=0.2),xlim=c(0,20))
plot(function(x)dgamma(x,shape=10,rate=2),xlim=c(0,20))
plot(function(x)dgamma(x,shape=5,rate=1),xlim=c(0,20))
plot(function(x)dgamma(x,shape=5,rate=1),xlim=c(0,20))
plot(function(x)dgamma(x,shape=1,rate=0.1),xlim=c(0,20))
plot(function(x)dgamma(x,shape=2,rate=0.1),xlim=c(0,20))
plot(function(x)dgamma(x,shape=2,rate=0.2),xlim=c(0,20))
plot(function(x)dgamma(x,shape=2,rate=0.3),xlim=c(0,20))
plot(function(x)dgamma(x,shape=2,rate=0.33),xlim=c(0,20))
?rstan
library(rstan)
?rstan
library(rstan)
library(bayesplot)
library(tidyverse)
library(rstan)
library(bayesplot)
library(tidyverse)
library(Hmisc)
library(ggplot2)
library(xtable)
set.seed(1234)
setwd("~/Documents/colab/bayesian/project/models")
# Read the training data set that was sampled.
data <- readRDS("../15kpoints.rds") # Load the sampled data.
# Omit the unknown genders for our regression model
data <- data %>% filter(gender == "Female" | gender == "Male")
data$gender <- as.integer(data$gender) - 1
describe(data)
points <- dim(data)[[1]]
data_list <- list(
n=points,
y=data$duration,
x1=data$age,
x2=as.numeric(data$gender)
)
fit4 <- stan("../stan_models/model4.stan", iter = 1000, chains = 4,
data = data_list, seed = 1)
# Save the fitted object in order to not run again every time.
# Analysis can easily be done later by loading this object.
saveRDS(fit4, file = "../model4_FIT15k.rds") # Used for saving one object.
# Load the (already) generated object into scope.
fit4 <- readRDS("../model4_FIT15k.rds") # Load one object.
# Convergence analysis.
print(fit4)
traceplot(fit4)
ggsave("../626fca86090ba51a6aff419a/plots/traceplot4.pdf", width = 7, height = 5)
# Lag en ok LaTeX tabell!
xtable(summary(fit4)$summary)
posterior <- as.data.frame(fit4)
y_pred <- posterior[, "y_pred"]
plot(density(y_pred))
tibble(y_pred) %>%
ggplot(aes(y_pred)) +
geom_density(aes(y = (..count..)/sum(..count..))) +
ggtitle("Mix of Gaussian")
ggsave("../626fca86090ba51a6aff419a/plots/postpred4.pdf", width = 7, height = 5)
beta1 <- posterior[, "beta1"]
tibble(beta1) %>%
ggplot(aes(beta1)) +
geom_density(aes(y = (..count..)/sum(..count..))) +
ggtitle("Posterior distribution of beta1")
ggsave("../626fca86090ba51a6aff419a/plots/postbeta1.pdf", width = 7, height = 5)
beta2 <- posterior[, "beta2"]
tibble(beta2) %>%
ggplot(aes(beta2)) +
geom_density(aes(y = (..count..)/sum(..count..))) +
ggtitle("Posterior distribution of beta2")
ggsave("../626fca86090ba51a6aff419a/plots/postbeta2.pdf", width = 7, height = 5)
# We select the statistics 1st quart, median and 3rd quart.
q.sim <- quantile(y_pred, c(0.25, 0.5, 0.75))
q.sim
# Compare with the same statistics in the data.
q.data <- quantile(data$duration, c(0.25, 0.5, 0.75))
q.data
quantile(posterior$beta1, c(0.025, 0.975))
quantile(posterior$beta2, c(0.025, 0.975))
mean(posterior$beta1)
mean(posterior$beta2)
# We select the statistics 1st quart, median and 3rd quart.
q.sim <- quantile(y_pred, c(0.25, 0.5, 0.75))
q.sim
# Compare with the same statistics in the data.
q.data <- quantile(data$duration, c(0.25, 0.5, 0.75))
q.data
mean(y_pred)
mean(data$duration)

data <- read.table("./basquet.txt")
ggplot() +
stat_function(fun = dgamma,
args = list(shape1 = prior.NBA[1], shape2 = prior.NBA[2]))
?stat_function
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA)
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA) +
xlim(c(130, 270))
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA) +
stat_function(fun = dgamma,
args = prior.ABC)
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA) +
stat_function(fun = dgamma,
args = prior.ABC)+
xlim(c(130, 270))
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA, col = "blue") +
stat_function(fun = dgamma,
args = prior.ABC) +
xlim(c(130, 270))
ggplot() +
stat_function(fun = dgamma,
args = prior.NBA, col = "blue") +
stat_function(fun = dgamma,
args = prior.ABC, col = "red") +
xlim(c(130, 270))
lik.NBA <- map_dbl(lambda, ~ prod(dpois(y, .x)))
library(purrr)
prior.NBA <- c(500, 2.5)
prior.ABC <- c(425, 2.5)
data <- read.table("./basquet.txt")
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(y, .x)))
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data[,2], .x)))
data
data <- as.data.frame(read.table("./basquet.txt"))
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data[,2], .x)))
data
data.NBA <- data[2:,2]
data.NBA <- data[2:-1,2]
data.NBA <- data[,2]
data.NBA
data.NBA <- data[,2]
data.NBA
data.NBA <- data[-1,2]
data.NBA
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
data.NBA
as.numeric(data.NBA)
data.NBA <- as.numeric(data[-1,2])
data.ABC <- as.numeric(data[-1,1])
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
df <- tibble(lambda, lik.NBA, lik.ABC)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01)
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01)
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
df
ggplot() +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "red") +
geom_line(aes(lambda, post.NBA), col = "red") +
ggplot() +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "red") +
geom_line(aes(lambda, post.NBA), col = "red")
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "red") +
geom_line(aes(lambda, post.NBA), col = "red")
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA)),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "red") +
geom_line(aes(lambda, post.NBA), col = "red")
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
df
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA)),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC))
)
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "red") +
geom_line(aes(lambda, post.NBA), col = "red")
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "blue") +
geom_line(aes(lambda, post.NBA), col = "green")
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC))
)
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "blue") +
geom_line(aes(lambda, post.NBA), col = "green")
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "blue")
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
data <- read.table("./basquet.txt")
data.NBA <- as.numeric(data[-1,2])
data.ABC <- as.numeric(data[-1,1])
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
df <- tibble(lambda, lik.NBA, lik.ABC)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC))
)
ggplot(df) +
geom_line(aes(lambda, prior.NBA), col = "red") +
geom_line(aes(lambda, lik.NBA), col = "blue") +
geom_line(aes(lambda, post.NBA), col = "green")
df %>%
gather(key = Distribution, value = value, -lambda) %>%
ggplot() +
geom_line(aes(x = lambda, y = value, col = Distribution))
sum(lik.ABC)
sum(lik.NBA)
sum(data.NBA)
sum(data.ABC)
sum(lik.NBA)
sum(lik.ABC)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
sum(lik.NBA)
sum(lik.ABC)
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
lik.ABC <- lik.ABC / (sum(lik.ABC) * 0.01)
sum(lik.NBA)
sum(lik.ABC)
data <- read.table("./basquet.txt")
data.NBA <- as.numeric(data[-1,2])
data.ABC <- as.numeric(data[-1,1])
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
lik.ABC <- lik.ABC / (sum(lik.ABC) * 0.01)
df <- tibble(lambda, lik.NBA, lik.ABC)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
df %>%
gather(key = Distribution, value = value, -lambda) %>%
ggplot() +
geom_line(aes(x = lambda, y = value, col = Distribution))
?dnbinom
n <- length(data.ABC[-1,1])
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(purrr)
prior.NBA <- c(500, 2.5)
prior.ABC <- c(425, 2.5)
data <- read.table("./basquet.txt")
data.NBA <- as.numeric(data[-1,2])
data.ABC <- as.numeric(data[-1,1])
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
lik.ABC <- lik.ABC / (sum(lik.ABC) * 0.01)
df <- tibble(lambda, lik.NBA, lik.ABC)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
df %>%
gather(key = Distribution, value = value, -lambda) %>%
ggplot() +
geom_line(aes(x = lambda, y = value, col = Distribution))
M <- 10000  # Number of simulations
n <- length(data.ABC[-1,1])
n <- length(data.ABC)
mean(y.sim)
post.NBA <- c(prior.NBA[1] + sum(data.NBA), prior.NBA[2] + length(data.NBA))
post.ABC <- c(prior.ABC[1] + sum(data.ABC), prior.ABC[2] + length(data.ABC))
y.sim <- rpois(M, post.NBA) - rpois(M, post.ABC)
mean(y.sim)
y.sim
post.NBA
lam.post.NBA <- rgamma(M, shape = post.NBA[1], rate = post.NBA[2])
lam.post.ABC <- rgamma(M, shape = post.ABC[1], rate = post.ABC[2])
y.sim <- rpois(M, lam.post.NBA) - rpois(M, lam.post.ABC)
post.NBA <- c(prior.NBA[1] + sum(data.NBA), prior.NBA[2] + length(data.NBA))
post.ABC <- c(prior.ABC[1] + sum(data.ABC), prior.ABC[2] + length(data.ABC))
lam.post.NBA <- rgamma(M, shape = post.NBA[1], rate = post.NBA[2])
lam.post.ABC <- rgamma(M, shape = post.ABC[1], rate = post.ABC[2])
y.sim <- rpois(M, lam.post.NBA) - rpois(M, lam.post.ABC)
mean(y.sim)
length(y.sim > 0)
length(y.sim > 0)
y.sim
y.sim[y.sim > 0]
length(y.sim[y.sim > 0])
# Probability that NBA match has more points than ABC match
length(y.sim[y.sim > 0]) / M
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(purrr)
prior.NBA <- c(500, 2.5)
prior.ABC <- c(425, 2.5)
data <- read.table("./basquet.txt")
data.NBA <- as.numeric(data[-1,2])
data.ABC <- as.numeric(data[-1,1])
lambda <- seq(130, 270, 0.01)
lik.NBA <- map_dbl(lambda, ~ prod(dpois(data.NBA, .x)))
lik.ABC <- map_dbl(lambda, ~ prod(dpois(data.ABC, .x)))
lik.NBA <- lik.NBA / (sum(lik.NBA) * 0.01)
lik.ABC <- lik.ABC / (sum(lik.ABC) * 0.01)
df <- tibble(lambda, lik.NBA, lik.ABC)
df <- df %>%
mutate(
prior.NBA = dgamma(lambda, shape = prior.NBA[1], rate = prior.NBA[2]),
prior.ABC = dgamma(lambda, shape = prior.ABC[1], rate = prior.ABC[2]),
post.NBA = prior.NBA * lik.NBA / (sum(prior.NBA * lik.NBA) * 0.01),
post.ABC = prior.ABC * lik.ABC / (sum(prior.ABC * lik.ABC) * 0.01)
)
df %>%
gather(key = Distribution, value = value, -lambda) %>%
ggplot() +
geom_line(aes(x = lambda, y = value, col = Distribution))
M <- 10000  # Number of simulations
set.seed(666)
post.NBA <- c(prior.NBA[1] + sum(data.NBA), prior.NBA[2] + length(data.NBA))
post.ABC <- c(prior.ABC[1] + sum(data.ABC), prior.ABC[2] + length(data.ABC))
lam.post.NBA <- rgamma(M, shape = post.NBA[1], rate = post.NBA[2])
lam.post.ABC <- rgamma(M, shape = post.ABC[1], rate = post.ABC[2])
y.sim <- rpois(M, lam.post.NBA) - rpois(M, lam.post.ABC)
# Probability that NBA match has more points than ABC match
length(y.sim[y.sim > 0]) / M
length(y.sim[y.sim >= 0]) / M
length(y.sim[y.sim >= 60]) / M
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rstan)
library(bayesplot)
options(mc.cores = parallel::detectCores())
Y_A <- c(115, 120, 111, 123, 116,
121, 118, 116, 127, 129)
Y_B <- c(123, 131, 113, 119, 123,
113, 128, 126, 125, 128)
data = list(n_A = length(Y_A), n_B = length(Y_B),
Y_A = Y_A, Y_B = Y_B)
fit <- stan("./stan_model/training_workers.stan", iter = 1000, chains = 4,
data = data)
fit
posterior <- as.matrix(fit)
mu_A_post <- posterior[,"mu_A"]
mu_B_post <- posterior[,"mu_B"]
acf(mu_A_post)
acf(mu_B_post)
traceplot(fit)
plot(density(mu_A_post))
plot(density(mu_B_post))
plot_title <- ggtitle("Posterior distributions of mu_A and mu_B", "with medians and 80% intervals")
mcmc_areas(posterior,
pars = c("mu_A", "mu_B"),
prob = 0.8) + plot_title
mcmc_trace(posterior,
pars = c("mu_A", "mu_B"),
facet_args = list(nrow = 2))
diff <- mu_A_post - mu_B_post
plot(density(diff))
plot(density(posterior[,"diff"]))
quantile(diff)
?quantile
quantile(diff, c(0.025, 0.975))
quantile(posterior[,"diff"], c(0.025, 0.975))
quantile(posterior[,"diff"], c(0.025, 0.975))
plot(density(posterior[,"diff"]))
quantile(posterior[,"diff"], c(0.025, 0.975))
plot(density(posterior[,"diff"]))
mcmc_trace(posterior,
pars = c("mu_A", "mu_B"),
facet_args = list(nrow = 2))
mcmc_areas(posterior,
pars = c("mu_A", "mu_B"),
prob = 0.8) + plot_title
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.8) + plot_title
mcmc_areas(posterior,
pars = c("diff"),
prob = c(0.025, 0.975)) + plot_title
mcmc_areas(posterior,
pars = c("diff"),
prob = c(0.25, 0.975)) + plot_title
mcmc_areas(posterior,
mcmc_areas(posterior,
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.95) + plot_title
)
}
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.95) + plot_title
plot_title <- ggtitle("Posterior distributions of mu_A - mu_B", "with median and 95% credible interval")
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.95) + plot_title
quantile(posterior[,"diff"], c(0.025, 0.975))
plot_title <- ggtitle("Posterior distributions of mu_A - mu_B", "with median and 95% credible interval")
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.95) + plot_title
quantile(posterior[,"diff"], c(0.025, 0.975))
plot_title <- ggtitle("Posterior distributions of mu_A - mu_B", "with median and 95% credible interval")
mcmc_areas(posterior,
pars = c("diff"),
prob = 0.95) + plot_title
install.packages("stringi")
gam <- rgamma(1000, 1, rate = 1)
plot(gam)
hist(gam)
gam <- rgamma(1000, 5, rate = 1)
hist(gam)
hist(gam)
?dgamma
1:10:0.1
knitr::opts_chunk$set(echo = TRUE)
plot(function(x)dgamma(x,shape=6,rate=1))
plot(function(x)dgamma(x,shape=6,rate=1),xlim=c(0,10))
plot(function(x)dgamma(x,shape=6,rate=5),xlim=c(0,20))
plot(function(x)dgamma(x,shape=6,rate=0.01),xlim=c(0,20))
plot(function(x)dgamma(x,shape=100,rate=20),xlim=c(0,20))
plot(function(x)dgamma(x,shape=1,rate=0.2),xlim=c(0,20))
plot(function(x)dgamma(x,shape=10,rate=2),xlim=c(0,20))
plot(function(x)dgamma(x,shape=5,rate=1),xlim=c(0,20))
plot(function(x)dgamma(x,shape=5,rate=1),xlim=c(0,20))
plot(function(x)dgamma(x,shape=1,rate=0.1),xlim=c(0,20))
plot(function(x)dgamma(x,shape=2,rate=0.1),xlim=c(0,20))
plot(function(x)dgamma(x,shape=2,rate=0.2),xlim=c(0,20))
plot(function(x)dgamma(x,shape=2,rate=0.3),xlim=c(0,20))
plot(function(x)dgamma(x,shape=2,rate=0.33),xlim=c(0,20))
?rstan
library(rstan)
?rstan
library(rstan)
library(bayesplot)
library(tidyverse)
##################################################
#### Data exploration and feature engineering ####
##################################################
set.seed(1234)
df <- read.csv2("./2021.05.11 KA1 mobilities eligible finalised started in 2019.csv")
library(dplyr)
library(Hmisc)
library(ggplot2)
library(forcats)
library(xtable)
setwd("~/Documents/colab/bayesian/project")
##################################################
#### Data exploration and feature engineering ####
##################################################
set.seed(1234)
df <- read.csv2("./2021.05.11 KA1 mobilities eligible finalised started in 2019.csv")
dim(df)
head(df)
names(df)
# Remove non-necessary columns
df <- df %>% select(-c("Project.Reference", "Mobility.Start.Month",
"Mobility.End.Month", "Field.of.Education",
"Education.Level", "Participant.Profile", "Special.Needs",
"Fewer.Opportunities", "GroupLeader", "Sending.City",
"Sending.Organization", "Sending.Organisation.Erasmus.Code",
"Receiving.City", "Receiving.Organization",
"Receiving.Organisation.Erasmus.Code", "Academic.Year"))
# Convert to proper data types
df <- df %>% transmute(duration = as.numeric(Mobility.Duration),
age = as.numeric(Participant.Age),
gender = as.factor(Participant.Gender),
nationality = as.factor(Participant.Nationality),
sending.country = as.factor(Sending.Country.Code),
receiving.country = as.factor(Receiving.Country.Code),
activity = as.factor(Activity..mob.),
participants = Participants)
summary(df)
# Observation: we should only include standard erasmus exchange students
df <- df %>% filter(activity == "Student mobility for studies between Programme Countries")
summary(df)
# Observations:
# - some weird age values
# - not many NA's, think we can safely remove those rows
any(is.na(df %>% select(age))) # There are no age NA values after filtering on the activity above (only standard Erasmus exchange).
colSums(is.na(df)) # There are only 4 missing nationalities, that's it.
# - more participants than one is an error I believe, we can probably remove those
dim(df %>% filter(participants > 1)) #There are approx 9000 of these.
df <- df %>% na.omit %>% filter(age > 15, age < 80, participants == 1)
summary(df)
# Observations:
# - Is 600 days duration too much? Should we treat it as an outlier?
# - Is one month too short of a stay? Should we not include those?
dim(df %>% filter(duration > 365))
# 88 observations which has an Erasmus period over a year.
dim(df %>% filter(duration < 20))
# 32 observations have an Erasmus period of less than 20 days.
df <- df %>% filter(duration <= 365, duration >= 20)
summary(df)
str(df)
describe(df)
theme_minimal()
### Age
ggplot(data = df) +
geom_bar(aes(age)) +
xlim(17, 60) +
labs(title = "Age of erasmus students",
x = "Age",
y = "Number of students")
ggplot(data = df) +
geom_boxplot(aes(gender, age)) +
labs(title = "Age distribution for genders",
x = "Gender",
y = "Age")
ggplot(data = df) +
geom_bar(aes(x = fct_infreq(sending.country), fill = sending.country)) +
labs(x = "Sending country",
y = "Number of students",
fill = "Sending country") +
theme(axis.text.x = element_text(size=6))
ggplot(data = df) +
geom_bar(aes(x = fct_infreq(sending.country))) +
labs(x = "Sending country",
y = "Number of students") +
theme(axis.text.x = element_text(size=6))
ggplot(data = df) +
geom_bar(aes(x = fct_infreq(sending.country), fill = sending.country)) +
labs(x = "Sending country",
y = "Number of students") +
theme(axis.text.x = element_text(size=6))
ggplot(data = df) +
geom_bar(aes(x = fct_infreq(sending.country))) +
labs(x = "Sending country",
y = "Number of students") +
theme(axis.text.x = element_text(size=6))
ggsave("./626fca86090ba51a6aff419a/plots/sending_countries.pdf", width = 7, height = 5)
ggplot(data = df) +
geom_bar(aes(x = fct_infreq(receiving.country), fill = receiving.country)) +
labs(x = "Receiving country",
y = "Number of students",
fill = "Receiving country") +
theme(axis.text.x = element_text(size=6))
ggplot(data = df) +
geom_bar(aes(x = fct_infreq(receiving.country))) +
labs(x = "Receiving country",
y = "Number of students") +
theme(axis.text.x = element_text(size=6))
ggsave("./626fca86090ba51a6aff419a/plots/receiving_countries.pdf", width = 7, height = 5)
